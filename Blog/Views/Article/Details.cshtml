@model Blog.Models.Article

@{
    ViewBag.Title = "Details";
}
<style>
    #author {
        color: #333;
        background-color: #f5f5f5;
        border-radius: 20px 20px 0 0;
        padding-left: 15px;
        padding-top: 5px;
        height: 30px;
    }

    #content {
        padding: 10px;
        color: #333;
        border-top: 1px solid #ddd;
        text-align:justify;
    }

    #container {
        border-radius: 20px;
        border: 1px solid #ddd;
        margin-bottom: 5px;
        height: 100px;
        width: 400px;
        overflow:auto;
        padding-bottom: 5px;
    }
</style>
<div class="container">
    <article>
        <header>
            <h2>
                @Model.Title
            </h2>
        </header>
        <p>
            @Model.Content
        </p>
        <small class="author">
            Autor: @Model.Author.FullName
        </small>
        <br />
        <div style="margin-bottom: 5px">
            @Html.ActionLink("Create Comment", "CreateComment", "Comments", new { articleId = Model.Id }, new { @class = "btn btn-success btn-xs" })
        </div>
        <div class="pull-right">
            @if (Request.IsAuthenticated)
            {
                <small class="author">Likes: @Model.PeopleWhoLiked.Count</small>
                if (Model.IsLikedByUser(User.Identity.Name))
                {
                    using (@Html.BeginForm("UnlikePost", "Article", FormMethod.Post))
                    {
                        @Html.HiddenFor(model => model.Id);

                        <input type="submit" value="Unlike" class="btn btn-success btn-xs" />
                    }
                }
                else
                {
                    using (@Html.BeginForm("LikePost", "Article", FormMethod.Post))
                    {
                        @Html.HiddenFor(model => model.Id);

                        <input type="submit" value="Like" class="btn btn-success btn-xs" />
                    }
                }
            }

        </div>
        
        @foreach (var comment in Model.Comments)
        {
            <div id="container">
                <div>
                    <small class="author" id="author"><span style="font-size: 11px;">By:</span> @comment.Author.FullName <span class="badge" style="float:right; margin-right: 8px">Added: @Convert.ToString(string.Format("{0:dd/MM/yyyy}", comment.DateCreated.Date))</span></small>
                </div>
                <p class="tab-content" id="content" style="margin-bottom: 0px;">
                    @comment.Content
                </p>
            </div>
            <div style="margin-bottom: 10px">
                @if (User.IsInRole("Admin") || comment.IsAuthor(User.Identity.Name))
                {
                    @Html.ActionLink("Edit", "Edit", "Comments", new { @id = comment.Id }, new { @class = "btn btn-success btn-xs" })
                    @Html.ActionLink("Delete", "Delete", "Comments", new { @id = comment.Id }, new { @class = "btn btn-danger btn-xs" })
                }

                @if (Model.IsAuthor(User.Identity.Name) && !comment.IsAuthor(User.Identity.Name))
                {
                    @Html.ActionLink("Delete", "Delete", "Comments", new { @id = comment.Id }, new { @class = "btn btn-danger btn-xs" })
                }
            </div>

        }
        <footer>
            <div class="pull-right">
                @if (User.IsInRole("Admin") || Model.IsAuthor(User.Identity.Name))
                {
                    @Html.ActionLink("Edit", "Edit", "Article", new { @id = Model.Id }, new { @class = "btn btn-success btn-xs" })
                    @Html.ActionLink("Delete", "Delete", "Article", new { @id = Model.Id }, new { @class = "btn btn-danger btn-xs" })
                }

                @Html.ActionLink("Back", "Index", "Article", null, new { @class = "btn btn-default btn-xs" })

            </div>

        </footer>
    </article>
</div>
<hr />
